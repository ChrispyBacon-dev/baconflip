name: Docker Image Build and Push

on:
  push:
    branches:
      - "main"
      - "nightly" # Add the nightly branch here
  pull_request:
    branches:
      - "main"
      # Decide if you want PRs to nightly to trigger a build (but not push)
      # - "nightly"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- NEW STEP: Extract Docker metadata ---
      - name: Extract Docker metadata
        id: meta # Give this step an ID so we can reference its outputs
        uses: docker/metadata-action@v4 # Use the metadata action
        with:
          images: alplat/baconflip # Your Docker image name
          tags: |
            # type=schedule # You could add tags for scheduled runs if needed
            # type=ref,event=tag # Keep tags like v1.0.0 if you use Git tags
            
            # Tag 'latest' for main branch pushes
            type=ref,event=branch,pattern=main,value=latest
            
            # Tag 'nightly' for nightly branch pushes
            type=ref,event=branch,pattern=nightly,value=nightly
            
            # Always tag with the Git SHA (short format is often cleaner)
            type=sha,format=short 
            # Or use the full SHA like before:
            # type=sha

      # --- UPDATED STEP: Build and Push Docker Image ---
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5 # Use latest version (v5 as of writing)
        with:
          context: .
          # Only push if the event is a push (not a pull request)
          # This prevents pushing intermediate builds from PRs
          push: ${{ github.event_name == 'push' }} 
          # Use the tags generated by the metadata action
          tags: ${{ steps.meta.outputs.tags }}
          # Use the labels generated by the metadata action (good practice)
          labels: ${{ steps.meta.outputs.labels }}